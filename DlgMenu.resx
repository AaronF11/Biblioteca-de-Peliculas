<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        1wAAAdcBjJIIaAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAACRSURBVHhe7dax
        DQIxDEDRVFCzG3QwFTAQDADDIGqwr8pJuQXi96TfRG580ilpAAAAAAAAFLaLDpOWu206R6/oN3m5Y+66
        co1GwzN3ixbHaDRQody9PbqDaj2j9ukOqvWNfIDyv8CpO6hW7r7IK2E0MHP3aCUfB+9oNDxTueMl2rSP
        Rs/IGcrdAAAAAAAAKKi1P6d6cCx2o6zjAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="PtbCerrar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>